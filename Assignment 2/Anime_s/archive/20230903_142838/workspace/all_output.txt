Given the requirements and assumptions, we will be using Python with Flask for the backend and HTML, CSS, and JavaScript for the frontend. We will also use the requests library to make API calls to MyAnimeList.

The core classes and functions will include:

1. `Anime`: A class to represent an anime with attributes like title, genre, theme, etc.
2. `AnimeList`: A class to represent a list of animes. It will have methods to add an anime to the list and to get animes based on genre and theme.
3. `get_anime_data`: A function to fetch anime data from MyAnimeList using the provided API key.
4. `app`: The Flask application.
5. `index`: The function to render the main page of the web application.
6. `get_recommendations`: The function to handle the POST request when a user selects genres and themes and to return the recommended animes.

Now, let's start with the entrypoint file, `app.py`.

app.py
```python
from flask import Flask, render_template, request
from anime import Anime, AnimeList
from mal_api import get_anime_data

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        genres = request.form.getlist('genres')
        themes = request.form.getlist('themes')
        animes = get_anime_data(genres, themes)
        return render_template('index.html', animes=animes)
    return render_template('index.html')

if __name__ == '__main__':
    app.run(debug=True)
```

Next, let's define the `Anime` and `AnimeList` classes in `anime.py`.

anime.py
```python
class Anime:
    def __init__(self, title, genres, themes):
        self.title = title
        self.genres = genres
        self.themes = themes

class AnimeList:
    def __init__(self):
        self.animes = []

    def add_anime(self, anime):
        self.animes.append(anime)

    def get_animes(self, genres, themes):
        return [anime for anime in self.animes if set(genres).intersection(anime.genres) and set(themes).intersection(anime.themes)]
```

Then, we define the `get_anime_data` function in `mal_api.py`.

mal_api.py
```python
import requests

API_KEY = '3d2f9fd7cac3fea652fa4bb529f510f57c836036285a785bc198d5e69049b69d'

def get_anime_data(genres, themes):
    response = requests.get(f'https://api.myanimelist.net/v2/anime?api_key={API_KEY}&fields=genres,themes')
    data = response.json()
    anime_list = AnimeList()
    for anime in data['data']:
        anime_list.add_anime(Anime(anime['title'], anime['genres'], anime['themes']))
    return anime_list.get_animes(genres, themes)
```

Finally, we need to create the `index.html` file in the `templates` directory.

index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Anime Recommendations</title>
</head>
<body>
    <form method="POST">
        <label for="genres">Select genres:</label><br>
        <input type="checkbox" id="action" name="genres" value="Action">
        <label for="action">Action</label><br>
        <!-- Add more genres here -->
        <label for="themes">Select themes:</label><br>
        <input type="checkbox" id="fantasy" name="themes" value="Fantasy">
        <label for="fantasy">Fantasy</label><br>
        <!-- Add more themes here -->
        <input type="submit" value="Get Recommendations">
    </form>
    {% if animes %}
        <h2>Recommended Animes:</h2>
        <ul>
            {% for anime in animes %}
                <li>{{ anime.title }}</li>
            {% endfor %}
        </ul>
    {% endif %}
</body>
</html>
```

For Python, we need to create a `requirements.txt` file to list the dependencies.

requirements.txt
```txt
flask
requests
```

To run the application, first install the dependencies with `pip install -r requirements.txt`, then run `python app.py`. The application will be available at `http://localhost:5000`.